openapi: "3.0.3"
info:
  title: "Books REST API"
  description: "Программный интерфейс ядра Books"
  version: "23.1"
servers:
- url: "/"
paths:
  /about:
    get:
      description: "Возвращает информацию о приложении."
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
  /books/{id}:
    delete:
      description: "Удаление книги."
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /books/{id}/image:
    get:
      description: "Обложка книги."
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
            text/plain:
              schema:
                type: "string"
                format: "byte"
  /books/{id}/image/thumbnail:
    get:
      description: "Миниатюра обложки книги."
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
            text/plain:
              schema:
                type: "string"
                format: "byte"
  /books/backup:
    post:
      description: "Выполняет архивирование книг в указанный каталог файловой сист\
        емы. Архив 7Z."
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /books/export:
    post:
      description: "Выполняет экспорт книг в указанный каталог файловой системы."
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /books/files/{id}:
    get:
      description: "Загрузка файла книги."
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
            text/plain:
              schema:
                type: "string"
                format: "byte"
  /books/import:
    post:
      description: "Выполняет импорт книг из указанного каталога файловой системы\
        . Файлы книг могут быть находиться во вложенных каталогах."
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /catalog:
    get:
      description: "Книжный каталог."
      responses:
        "200":
          description: "OK"
          content:
            application/xml:
              schema:
                type: "string"
  /catalog/authors:
    get:
      description: "По авторам."
      responses:
        "200":
          description: "OK"
          content:
            application/xml:
              schema:
                type: "string"
  /catalog/authors/{id}/books:
    get:
      description: "Все книги автора."
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/xml:
              schema:
                type: "string"
  /catalog/authors/{id}/sequences:
    get:
      description: "По сериям."
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/xml:
              schema:
                type: "string"
  /catalog/genres:
    get:
      description: "По жанрам."
      responses:
        "200":
          description: "OK"
          content:
            application/xml:
              schema:
                type: "string"
  /catalog/genres/{id}/books:
    get:
      description: "Все книги жанра."
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/xml:
              schema:
                type: "string"
  /catalog/recent:
    get:
      description: "Недавно добавленные книги."
      responses:
        "200":
          description: "OK"
          content:
            application/xml:
              schema:
                type: "string"
  /catalog/recommended:
    get:
      description: "Рекомендуемые книги."
      responses:
        "200":
          description: "OK"
          content:
            application/xml:
              schema:
                type: "string"
  /catalog/sequences/{id}/books:
    get:
      description: "Все книги серии."
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/xml:
              schema:
                type: "string"
  /catalog/unread:
    get:
      description: "Непрочитанные книги."
      responses:
        "200":
          description: "OK"
          content:
            application/xml:
              schema:
                type: "string"
  /catalog/unverified:
    get:
      description: "Непроверенные книги."
      responses:
        "200":
          description: "OK"
          content:
            application/xml:
              schema:
                type: "string"
  /html-thymeleaf:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ThymeleafContent"
components:
  schemas:
    Map:
      type: "object"
      properties: {}
    HeaderValueParam:
      type: "object"
      properties:
        name:
          type: "string"
        value:
          type: "string"
        escapeValue:
          type: "boolean"
    ContentType:
      type: "object"
      properties:
        contentType:
          type: "string"
        contentSubtype:
          type: "string"
        parameters:
          type: "array"
          items:
            $ref: "#/components/schemas/HeaderValueParam"
    Locale:
      type: "object"
      properties: {}
    ThymeleafContent:
      type: "object"
      properties:
        template:
          type: "string"
        model:
          $ref: "#/components/schemas/Map"
        etag:
          type: "string"
        contentType:
          $ref: "#/components/schemas/ContentType"
        locale:
          $ref: "#/components/schemas/Locale"
        fragments:
          type: "array"
          items:
            type: "string"